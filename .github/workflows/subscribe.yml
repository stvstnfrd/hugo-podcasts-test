name: Subscribe to an RSS Feed
on:
  issues:
    types:
    - opened
    - reopened
  workflow_dispatch:
    inputs:
      url:
        description: 'The URL of the RSS feed'
        required: true
        type: string
      title:
        description: 'The title of the RSS feed'
        default: ''
        required: false
        type: string
      website:
        description: 'The website of the RSS feed'
        default: ''
        required: false
        type: string
      file:
        description: 'The file containing your feeds; this MUST exist'
        default: 'etc/feed.opml'
        required: false
        type: string
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      url: ${{ steps.params.outputs.url }}
      title: ${{ steps.params.outputs.title }}
      website: ${{ steps.params.outputs.website }}
      file: ${{ steps.params.outputs.file }}
      action: ${{ steps.params.outputs.action }}
    steps:
    - uses: actions/checkout@v3
    - name: Set parameters
      id: params
      run: |
        url=''
        if [ "${GITHUB_EVENT_NAME}" = 'issues' ]; then
          printf '%s\n' '${{ github.event.issue.body }}' >issue.txt
          action="$(./bin/get-key-from-issue Action issue.txt)"
          if [ "${action}" = import-feed ]; then
            url="$(./bin/get-key-from-issue URL issue.txt)"
            title="$(./bin/get-key-from-issue Title issue.txt)"
            website="$(./bin/get-key-from-issue Website issue.txt)"
            file='etc/feed.opml'
          fi
        elif  [ "${GITHUB_EVENT_NAME}" = 'workflow_dispatch' ]; then
          url="${{ inputs.url }}"
          title="${{ inputs.title }}"
          website="${{ inputs.website }}"
          file="${{ inputs.file }}"
        else
          echo 'Unsupported workflow type' >/dev/stderror
        fi
        echo "url=${url}" >>"${GITHUB_OUTPUT}"
        echo "title=${title}" >>"${GITHUB_OUTPUT}"
        echo "website=${website}" >>"${GITHUB_OUTPUT}"
        echo "file=${file}" >>"${GITHUB_OUTPUT}"
        echo "action=create-feed" >>"${GITHUB_OUTPUT}"
        echo "${action}"
  subscribe:
    needs: setup
    if: needs.setup.outputs.url
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Add entry to OPML file
      env:
        OPML_URL: ${{ needs.setup.outputs.url }}
        OPML_TITLE: ${{ needs.setup.outputs.title }}
        OPML_WEBSITE: ${{ needs.setup.outputs.website }}
        OPML_FILE: ${{ needs.setup.outputs.file }}
      run: make subscribe
    - name: Validate the updated file
      run: make lint-xml
    - name: Preview the feed
      id: feed
      run: |
        title="${{ needs.setup.outputs.title }}"
        title="${title:-${{ needs.setup.outputs.url }}}"
        echo "title=${title}" >>"${GITHUB_OUTPUT}"
        delimiter="$(openssl rand -hex 8)"
        echo "contents<<${delimiter}" >>"${GITHUB_OUTPUT}"
        curl '${{ needs.setup.outputs.url }}' >input.xml
        xmllint --format input.xml >>"${GITHUB_OUTPUT}"
        echo "${delimiter}" >>"${GITHUB_OUTPUT}"
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v4
      with:
        add-paths: |
          ${{ needs.setup.outputs.file }}
        branch-suffix: timestamp
        commit-message: |
          feat: subscribe to new feed; ${{ steps.feed.outputs.title }}

          Fix #${{ github.event.issue.number }}
        delete-branch: true
        title: 'feat: subscribe to new feed; ${{ steps.feed.outputs.title }}'
        body: |
          # ${{ steps.feed.outputs.title }}

          - [Feed](${{ needs.setup.outputs.url }})
          - [Website](${{ needs.setup.outputs.website }})

          ## Preview
          ```xml
          ${{ steps.feed.outputs.contents }}
          ```
        labels: |
          feeds
  create:
    needs: setup
    if: ${{ needs.setup.outputs.action == 'create-feed' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Create new podcast index
      env:
        FEED_ISSUE: issue.txt
      run: |
        printf '%s\n' '${{ github.event.issue.body }}' >"${FEED_ISSUE}"
        make feed
        title="$(./bin/get-key-from-issue Title "${FEED_ISSUE}")"
        echo "title=${title}" >>"${GITHUB_OUTPUT}"
        delimiter="$(openssl rand -hex 8)"
        echo "contents<<${delimiter}" >>"${GITHUB_OUTPUT}"
        ./bin/get-key-from-issue Description "${FEED_ISSUE}" >>"${GITHUB_OUTPUT}"
        echo "${delimiter}" >>"${GITHUB_OUTPUT}"
      id: feed
    - name: Validate the changes
      run: make build
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v4
      with:
        add-paths: |
          src/content
        branch-suffix: timestamp
        commit-message: |
          feat: create new feed; ${{ steps.feed.outputs.title }}

          Fix #${{ github.event.issue.number }}
        delete-branch: true
        title: 'feat: create new feed; ${{ steps.feed.outputs.title }}'
        body: |
          # ${{ steps.feed.outputs.title }}

          ${{ steps.feed.outputs.contents }}
        labels: |
          create-feed
